doctype html(lang='en')

head
  title
    !=pageContent.getText('thesis.title')
  link(rel="stylesheet", href="/stylesheets/layouts/thesis.css")
  meta(name="viewport", content="width=device-width, initial-scale=1")

  // Required for Previews and Experiments
  script(src="https://code.jquery.com/jquery-1.12.4.min.js")
  script
    = ctx?"window.prismic = { endpoint: '" + ctx.endpoint + "' };":""
  script(src="//static.cdn.prismic.io/prismic.min.js")
  script(src="/javascript/vendors/highlight.min.js")

block body
  include ../components/header.pug
  section.container
    article.thesis.content
      div.headline
        div.department.js-detect-collision
          !=pageContent.getText('thesis.department')
        each item in pageContent.getGroup('thesis.byline').toArray()
          div.thesis-author.js-detect-collision
            !=item.getText('author')
        div.title.js-detect-collision
          !=pageContent.get('thesis.title').asHtml()
        if pageContent.getText('thesis.subtitle')
          div.subtitle.js-detect-collision
            !=pageContent.get('thesis.subtitle').asHtml()
      div.meta.js-detect-collision
        ul.meta-advisors
          each item in pageContent.getGroup('thesis.advisors').toArray()
            li.meta-advisor
              p Faculty Advisor
              p
                != item.getText('faculty-advisor')
        div.meta-publishDate.js-detect-collision
          != pageContent.getDate('thesis.publish-date').toLocaleDateString('en', {month: 'long', year: 'numeric'})
        if pageContent.getText('thesis.published')
          div.meta-published
            != pageContent.getText('thesis.published')
        if pageContent.getText('thesis.type')
          div.meta-type
            != pageContent.getText('thesis.type')
      div.body
        if pageContent.getGroup('thesis.hero-image')
          each hero in pageContent.getGroup('thesis.hero-image').toArray()
            figure.hero.js-detect-collision
              img(src=hero.getImage('image').url)
              if hero.get('attribution')
                cite.hero-attribution !{hero.get('attribution').asHtml()}
              if hero.get('caption')
                figcaption.hero-caption !{hero.get('caption').asHtml()}

        for slice in pageContent.getSliceZone('thesis.body').slices
          case slice.sliceType
            when 'subhead'
              span.subhead !{slice.value.asHtml()}
            when 'copy'
              div.thesis-copy !{slice.value.asHtml()}
            when 'pullquote'
              blockquote.pullquote.js-detect-collision !{slice.value.asHtml()}
            when 'image-with-caption'
              figure.figure.js-detect-collision
                each imageWithCaption in slice.value.toArray()
                  img(src=imageWithCaption.getImage('figure').url)
                  if imageWithCaption.get('attribution')
                    cite.figure-attribution !{imageWithCaption.get('attribution').asText()}
                  if imageWithCaption.get('caption')
                    figcaption.figure-caption !{imageWithCaption.get('caption').asHtml()}
      each item in pageContent.getGroup('thesis.byline').toArray()
        div.bio.js-detect-collision
          div.bio-headshot
            if item.getImage('headshot')
              div
                img(src=item.getImage('headshot').url)
          div.bio-description
            strong ABOUT THE AUTHOR
            p
              if item.getText('bio')
                !=item.getText('bio')
              else
                !=item.getText('author')
            if item.getText('acknowledgements')
              strong ACKNOWLEDGEMENTS
              p
                !=item.getText('acknowledgements')
      if pageContent.getText('thesis.bibliography')
        div.bibliography.js-detect-collision
          strong BIBLIOGRAPHY
          !=pageContent.get('thesis.bibliography').asHtml()

  include ../components/footer.pug
script(src="/javascript/script.js")
